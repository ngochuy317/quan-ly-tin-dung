name: CI

on:
  push:
    branches: [ main ]


jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: .

    steps:
      - name: Make envfile
        uses: actually-colab/github-action-create-env-file@v2.1
        with:
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          envkey_USE_SPACES: ${{ secrets.USE_SPACES }}
          envkey_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          envkey_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          envkey_AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
          envkey_AWS_S3_ENDPOINT_URL: ${{ secrets.AWS_S3_ENDPOINT_URL }}
          directory: /var/www/mywebsite
          file_name: .env

      - name: Checkout Repo
        uses: actions/checkout@v1

      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: 22
          password: ${{ secrets.SSH_PASSWORD }}
          source: "."
          target: "/var/www/mywebsite"

      - name: Deploy to VPS via SSH action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          command_timeout: 200m
          script: |
            cd /var/www/mywebsite
            rm -f .env
            touch .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo USE_SPACES=${{ secrets.USE_SPACES }} >> .env
            echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
            echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
            echo AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }} >> .env
            echo AWS_S3_ENDPOINT_URL=${{ secrets.AWS_S3_ENDPOINT_URL }} >> .env
            docker-compose stop
            docker-compose rm -f
            docker rmi -f $(docker images --filter "dangling=true" -q --no-trunc)
            docker rm -f $(docker ps -a -q)
            docker-compose build --no-cache
            docker-compose up -d
