name: CI

on:
  push:
    branches: [ main ]


jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1

      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: 22
          password: ${{ secrets.SSH_PASSWORD }}
          source: "."
          target: "/var/www/mywebsite"

      - name: Deploy to VPS via SSH action
        uses: appleboy/ssh-action@master
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          USE_SPACES: ${{ secrets.USE_SPACES }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
          AWS_S3_ENDPOINT_URL: ${{ secrets.AWS_S3_ENDPOINT_URL }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          command_timeout: 200m
          envs: POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_HOST,POSTGRES_DB,USE_SPACES,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_STORAGE_BUCKET_NAME,AWS_S3_ENDPOINT_URL
          script: |
            cd /var/www/mywebsite
            rm -f .env
            touch .env
            echo POSTGRES_USER=$POSTGRES_USER >> .env
            echo POSTGRES_PASSWORD=$POSTGRES_PASSWORD >> .env
            echo POSTGRES_HOST=$POSTGRES_HOST >> .env
            echo POSTGRES_DB=$POSTGRES_DB >> .env
            echo USE_SPACES=$USE_SPACES >> .env
            echo AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID >> .env
            echo AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY >> .env
            echo AWS_STORAGE_BUCKET_NAME=$AWS_STORAGE_BUCKET_NAME >> .env
            echo AWS_S3_ENDPOINT_URL=$AWS_S3_ENDPOINT_URL >> .env
            docker-compose stop
            docker-compose rm -f
            docker rmi -f $(docker images --filter "dangling=true" -q --no-trunc)
            docker rm -f $(docker ps -a -q)
            docker-compose build --no-cache
            docker-compose up -d
